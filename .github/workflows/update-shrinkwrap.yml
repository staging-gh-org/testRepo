name: Update Shrinkwrap

on:
  push:
    branches:
      - master

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  generate-shrinkwrap:
    runs-on: ubuntu-latest
    environment: Hatcher+ FAAST
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.HATCHER_PLUS_APP_ID }}
          private-key: ${{ secrets.HATCHER_PLUS_APP_SECRET }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Generate shrinkwrap file
        run: npm shrinkwrap

      - name: Enable auto-merge for repository
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }} \
            -f allow_auto_merge=true

      - name: Create or Update Pull Request
        id: create_pr
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Generate a unique branch name
          BRANCH_NAME="update-shrinkwrap-$(date +%Y%m%d%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "Update shrinkwrap file"
          git push origin $BRANCH_NAME

          PR_URL=$(gh pr create --title "Update shrinkwrap file" \
                                --body "Automatically generated PR to update the shrinkwrap file" \
                                --base master \
                                --head $BRANCH_NAME)

          echo "PR_URL=$PR_URL" >> $GITHUB_OUTPUT
          
          # Enable auto-merge for this PR
          gh pr merge $PR_URL --auto --merge

          # Check if there are any checks
          if gh pr checks $PR_URL; then
            echo "Checks found, waiting for completion..."
            gh pr checks $PR_URL --watch
            if gh pr checks $PR_URL; then
              echo "Checks passed, PR will be merged automatically"
            else
              echo "Checks failed, PR was not merged"
              exit 1
            fi
          else
            echo "No checks found, PR will be merged automatically"
          fi

      - name: Delete temporary branch
        if: always()
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          BRANCH_NAME="${{ steps.create_pr.outputs.BRANCH_NAME }}"
          PR_URL="${{ steps.create_pr.outputs.PR_URL }}"
          
          # Check if PR was merged
          if gh pr view $PR_URL --json state | grep -q '"state": "MERGED"'; then
            echo "PR was merged, deleting branch $BRANCH_NAME"
            git push origin --delete $BRANCH_NAME
          else
            echo "PR was not merged, closing PR and deleting branch $BRANCH_NAME"
            gh pr close $PR_URL
            git push origin --delete $BRANCH_NAME
          fi
